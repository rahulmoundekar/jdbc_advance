File handling :
	.
collection Framework :
---------------------

Jdbc APi :
	we can communicate with database
	
Database ?
	-collection table 
	-huge amount of data stored
	-data manupulation	
	-Normalization-5NF-2,3NF
	
	Vendors :
		Query dependent
			-MySQL
			-H2DB
			-Derby
			-Oracle
			-PostGress (PLSQL)
		Script: bigdata	
			-mongodb
			-hadoop
	
employee
	id
	
	Address adress

Student	
	Address adress


Address 
	
	house no
	area
	landmark
	city
	zipcode
----------------------------------------
MYSQL :
	-50m
	-index maintain
	-does not support to sequence
		e.g
			id  name   address
			1   abc		Karvenagar
			2
			4
			5
			6
	-mysql installation
		https://dev.mysql.com/downloads/installer/
---------------------------
Data types :
	int
	varchar(45)
	float
	double
	bigInt
	longtext
	date
	datetime
	timestamp
	boolean
	tynint
	blob------file, image
-----------------------------------
-DML : Data manipulation language
		insert, update, delete, alter
-DDL : data definition language
	create database, create table, drop ,truncate
	
-------------------------------------------------
1} always create database
	-database have multiple tables
	-table have multiple rows and columns
2} tables, view, trigger, procedure, functions
3} prepared Queries
----------------------------------------

create databases clc;
use clc;
create table employee(id int, name varchar(45), mobile varchar(10));
insert into employee(1,"rahul","8384834");
update employee set name="rakesh" where id=1;
delete from employee where id=1;
select * from employee;
select id, name from employee;
select * from employee where id=1
select * from employee where salary>=10000
select max(salary) from employee;
select min(salary) from employee;
select count(*) from employee;
select sum(salary) from employee;
select e.id , e.name,  a.id, a.address from employee e,  address a;
------------------------------------------------------
JDBC :
	-java database connectivity
	-huge amount of data can stored dynamically
ODBC : open database connectivity
	MSAccess
		excel
		
		client ---server
			-jdbc-odbc driver---native lib+software installion
			-native driver--client--server
			-network driver--LAN connection
	mysql-connector-8.X.X		-thin driver : client side work--no need to config server
--------------------------------------------------
5 step :
	
	1} load driver--mysql
		
	Class c=Class.forName("com.mysql.cj.jdbc.Driver");
	Driver d=(Driver)c.newInstance(); dynamic object creation

	A a=new A(); static object

	2} to connect with database : connection established
		Connection con=DriverManager.getConnection(url, username, password);
		url : jdbc:mysql://localhost/ip:3306/databasename
		username : root
		password : root
		
	3} create statments for queries exeuction
		Statement---execution
		PreparedStatement-faster--runtime inputs
		CallableStatement-----procedure, precompile query-faster
			
	4} prepared queries 
	boolean =execute()--c,insert, drop
		int =executeUpdate()--insert, update, delete,
		ResultSet =executeQuery()	-select	
	 	
	5} connection close
----------------------------------------------		
download mysql connector.jar  file
https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.16
----------------------------------------------
Statement
 -Query exection
 
PreparedStatement
	-parametrized Query	(?-Column-index(1))
	-batch execution
	 PreparedStatement ps=con.preparedStatement();
	 	getter/setter-
	
statement	
	10---student-
		insert ---10 times excute	
PS
	10-student	
		1-time excute--batch execution
	
-----------------------------------------------------------

CallableStatement :    CallableStatement cs=con.preparedCall("{call storedName()}");
	-pre-compiled queries 
		-stored procedures 
			-method or function 
			-logical operation--any queries-group of statements 
			-return nothing
			-secure
			
		-function	
			-logical 
			-return values

	-we can call stored procedure.
	-fast than preparedStatement

Stored procedure :
	IN--SET
	OUT--GET
	INOUT-SETGET --SELECT ID from employee where id=id;
	
	
----------------------------------------

RDBMS : relational Database management system :


one to one
	pk--fk--unique
one to many
	pk--fk--duplicate
many to many
	pk--fk--duplicate

-----------------------------------------

employee 
id name mobile       email
1   abc   48584385

address 
id street city zipcode
101 a    pune   411052
102 b   pune 	411014




primary key : it is unique identification key --unique
forgein key : duplicate // unique

----------------------------------
one to one :

PK----FK
unique--FK
---------------------------------
-----------------------------------------

employee 
id name mobile       email
1   abc   48584385

address 
id street city zipcode   eid (FK)
101 a    pune   411052
102 b   pune 	411014



create table employee(id int primary key auto_in, name var, mob var);

CREATE TABLE `pancard` (
  `id` INT NOT NULL,
  `pancardno` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
    FOREIGN KEY (`id`)
    REFERENCES `rdmsjoins`.`person` (`id`);

insert into address(street, city, zipcode,eid)values(a,pune,411052,1);
  
select * from employee;

join query

join :
	select * from employee e,address a where e.id=a.eid;
	
inner join 
	select * from employee e inner join/join address a on e.id=a.eid;  	
	
left join
	select * from employee e left join adresss a on e.id=a.eid;
		
	
right join

outer join :
	mysql does not support this join	

-----------------------------
 Cannot add or update a child row: a foreign key constraint fails 
---------------------------------
one to many /many to one
uni bidirection

employee   certification 
						
abc             ocjp    1
xyz             AWS    1
pqr             AWS   2

many to many


------------------------------

customer                   Accounts
abc							icici,sbi
-------------------------------------

table 
customer                      Account        		  	   bank   
id  name					aid      ano   cid  bid          	id name      				
1    abc					101		234    	1    11			11   sbi	1
2		pqr					102		3434	1    12			12	icici  1	

-----------------------------------------------------

employee       certificate      
1     abc		1		Java    
2      pqr		2		AWS
				3       Salesforce

-
employee_certificate
id 		eid_fk   cid_fk
1		1			1
2		1			2
3		2			1
4		2			3

	







	


	

	
	










	
	
			
	
	
	
	
	


		
	

